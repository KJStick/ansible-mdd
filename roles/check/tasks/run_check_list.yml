# - name: Generate paths for schema file
#   set_fact:
#     schema_dir_list: "{{ ( [ slashed_schema_dir ] | product(schema_group_dirs + ['']) | map('join') | list ) + [ role_path + '/files/schemas/' ]}}"
#     schema_file: ''
#   vars:
#     group_list: "{{ [ inventory_hostname ] + sites | default([]) + regions | default([])}}"
#     slashed_schema_dir: "{{ schema_dir | regex_replace('^(.+[^/])/?$', '\\1/') }}"

- name: Search for check files
  include_role:
    name: ciscops.mdd.common
    tasks_from: files_in_path
  vars:
    mdd_root: "{{ check_root }}"
    mdd_dir_items: "{{ check_dir_items }}"
    mdd_file_patterns: "{{ check_file_patterns }}"

- name: Read in check files
  set_fact:
    check_file: "{{ lookup('file', item) | from_yaml }}"
  loop: "{{ mdd_file_list }}"
  register: check_file_list

- name: Find relevant checks
  set_fact:
    mdd_check_list: "{{ mdd_check_list | default([]) + check_item.mdd_checks }}"
  with_items: "{{ check_file_list.results | map(attribute='ansible_facts.check_file') | default([]) }}"
  when: check_item.mdd_tags | intersect(tags | default([])) | length
  loop_control:
    loop_var: 'check_item'
  vars:
    mdd_check_list: []

- name: Run Checks
  include_role:
    name: ciscops.mdd.check
    tasks_from: run_check
  with_items: "{{ mdd_check_list | default([]) }}"
  loop_control:
    loop_var: 'check_item'
  # vars:
  #   schema_path_list: "{{ schema_dir_list }}"